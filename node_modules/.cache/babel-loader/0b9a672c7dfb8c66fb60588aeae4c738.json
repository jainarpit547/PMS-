{"ast":null,"code":"import axios from \"axios\";\nimport setAuthToken from \"../utils/setAuthToken\"; // import jwt from \"jwt-decode\";\n\nimport jwt from \"jwt-simple\";\nimport { GET_ERRORS, GET_SUCCESS, SET_CURRENT_USER, USER_LOADING } from \"./types\";\nimport constants from \"../constants/index\";\nexport const loginUser = userData => dispatch => {\n  axios.post(constants.baseUrl + \"/api/v1/users/login\", userData);\n  consol.log('req data is', userData).then(res => {\n    //const { token } = res.data;\n    const secret = \"FxUum76z\";\n    const currentTime = Date.now() / 1000;\n    const payload = {\n      id: res.data.id,\n      email: res.data.email,\n      user_type: res.data.user_type,\n      token: res.data.token,\n      expires: currentTime + 604800\n    }; // encode\n\n    const token = jwt.encode(payload, secret);\n    localStorage.setItem(\"jwtToken\", token);\n    setAuthToken(token); //const decoded = jwt_decode(token);\n    // decode\n\n    const decoded = jwt.decode(token, secret);\n    dispatch(setCurrentUser(decoded));\n  }).catch(err => {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err\n    });\n  });\n}; // export const forgotUser = (userData, history) => (dispatch) => {\n//   axios\n//     .post(\"/api/v1/users/forgot\", userData)\n//     .then((res) => {\n//       dispatch({\n//         type: GET_SUCCESS,\n//         payload: res,\n//       });\n//     })\n//     .catch((err) =>\n//       dispatch({\n//         type: GET_ERRORS,\n//         payload: err.response.data,\n//       })\n//     );\n// };\n// export const resetUser = (userData, history) => (dispatch) => {\n//   axios\n//     .post(\"/api/v1/users/reset\", userData)\n//     .then((res) => {\n//       dispatch({\n//         type: GET_SUCCESS,\n//         payload: res,\n//       });\n//     })\n//     .catch((err) =>\n//       dispatch({\n//         type: GET_ERRORS,\n//         payload: err.response.data,\n//       })\n//     );\n// };\n\nexport const setCurrentUser = decoded => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded\n  };\n};\nexport const setUserLoading = () => {\n  return {\n    type: USER_LOADING\n  };\n}; // export const logoutUser = (logoutData) => (dispatch) => {\n//   localStorage.removeItem(\"jwtToken\");\n//   setAuthToken(false);\n//   dispatch(setCurrentUser({}));\n//   let config = {\n//     method:'DELETE',\n//     url:'http://3.22.108.178:3335/api/v1/users/logout',\n//     data: logoutData,\n//     headers:{\n//         Authorization: \"Bearer \" + logoutData.token, Accept : 'application/json', 'Content-Type': 'application/json'\n//     }\n// }\n// axios(config).then(\n//   success=>{\n//       console.log(\"SUCCESSfully logout\")\n//       dispatch({\n//                   type: GET_SUCCESS,\n//                   payload: success,\n//       })\n//   },\n//   error=>{\n//       console.log(\"ERROR\")\n//       dispatch({\n//                   type: GET_ERRORS,\n//                   payload: error.response.data\n//               })\n//           }\n//   );\n// };","map":{"version":3,"sources":["/home/android03/Projects/pms-frontend/src/actions/authActions.js"],"names":["axios","setAuthToken","jwt","GET_ERRORS","GET_SUCCESS","SET_CURRENT_USER","USER_LOADING","constants","loginUser","userData","dispatch","post","baseUrl","consol","log","then","res","secret","currentTime","Date","now","payload","id","data","email","user_type","token","expires","encode","localStorage","setItem","decoded","decode","setCurrentUser","catch","err","type","setUserLoading"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,uBAAzB,C,CACA;;AACA,OAAOC,GAAP,MAAgB,YAAhB;AACA,SACEC,UADF,EAEEC,WAFF,EAGEC,gBAHF,EAIEC,YAJF,QAKO,SALP;AAMA,OAAOC,SAAP,MAAsB,oBAAtB;AAEA,OAAO,MAAMC,SAAS,GAAIC,QAAD,IAAeC,QAAD,IAAc;AACnDV,EAAAA,KAAK,CACFW,IADH,CACQJ,SAAS,CAACK,OAAV,GAAoB,qBAD5B,EACmDH,QADnD;AAEEI,EAAAA,MAAM,CAACC,GAAP,CAAW,aAAX,EAAyBL,QAAzB,EACCM,IADD,CACOC,GAAD,IAAS;AACb;AACA,UAAMC,MAAM,GAAG,UAAf;AACA,UAAMC,WAAW,GAAGC,IAAI,CAACC,GAAL,KAAa,IAAjC;AACA,UAAMC,OAAO,GAAG;AACdC,MAAAA,EAAE,EAAEN,GAAG,CAACO,IAAJ,CAASD,EADC;AAEdE,MAAAA,KAAK,EAAER,GAAG,CAACO,IAAJ,CAASC,KAFF;AAGdC,MAAAA,SAAS,EAAET,GAAG,CAACO,IAAJ,CAASE,SAHN;AAIdC,MAAAA,KAAK,EAAEV,GAAG,CAACO,IAAJ,CAASG,KAJF;AAKdC,MAAAA,OAAO,EAAET,WAAW,GAAG;AALT,KAAhB,CAJa,CAWb;;AACA,UAAMQ,KAAK,GAAGxB,GAAG,CAAC0B,MAAJ,CAAWP,OAAX,EAAoBJ,MAApB,CAAd;AAEAY,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCJ,KAAjC;AACAzB,IAAAA,YAAY,CAACyB,KAAD,CAAZ,CAfa,CAgBb;AAEA;;AACA,UAAMK,OAAO,GAAG7B,GAAG,CAAC8B,MAAJ,CAAWN,KAAX,EAAkBT,MAAlB,CAAhB;AACAP,IAAAA,QAAQ,CAACuB,cAAc,CAACF,OAAD,CAAf,CAAR;AACD,GAtBD,EAuBCG,KAvBD,CAuBQC,GAAD,IAAS;AACdzB,IAAAA,QAAQ,CAAC;AACP0B,MAAAA,IAAI,EAAEjC,UADC;AAEPkB,MAAAA,OAAO,EAAEc;AAFF,KAAD,CAAR;AAID,GA5BD;AA6BH,CAhCM,C,CAkCP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMF,cAAc,GAAIF,OAAD,IAAa;AACzC,SAAO;AACLK,IAAAA,IAAI,EAAE/B,gBADD;AAELgB,IAAAA,OAAO,EAAEU;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,MAAMM,cAAc,GAAG,MAAM;AAClC,SAAO;AACLD,IAAAA,IAAI,EAAE9B;AADD,GAAP;AAGD,CAJM,C,CAMP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import axios from \"axios\";\nimport setAuthToken from \"../utils/setAuthToken\";\n// import jwt from \"jwt-decode\";\nimport jwt from \"jwt-simple\";\nimport {\n  GET_ERRORS,\n  GET_SUCCESS,\n  SET_CURRENT_USER,\n  USER_LOADING,\n} from \"./types\";\nimport constants from \"../constants/index\";\n\nexport const loginUser = (userData) => (dispatch) => {\n  axios\n    .post(constants.baseUrl + \"/api/v1/users/login\", userData)\n    consol.log('req data is',userData)\n    .then((res) => {\n      //const { token } = res.data;\n      const secret = \"FxUum76z\";\n      const currentTime = Date.now() / 1000;\n      const payload = {\n        id: res.data.id,\n        email: res.data.email,\n        user_type: res.data.user_type,\n        token: res.data.token,\n        expires: currentTime + 604800,\n      };\n      // encode\n      const token = jwt.encode(payload, secret);\n\n      localStorage.setItem(\"jwtToken\", token);\n      setAuthToken(token);\n      //const decoded = jwt_decode(token);\n\n      // decode\n      const decoded = jwt.decode(token, secret);\n      dispatch(setCurrentUser(decoded));\n    })\n    .catch((err) => {\n      dispatch({\n        type: GET_ERRORS,\n        payload: err,\n      });\n    });\n};\n\n// export const forgotUser = (userData, history) => (dispatch) => {\n//   axios\n//     .post(\"/api/v1/users/forgot\", userData)\n//     .then((res) => {\n//       dispatch({\n//         type: GET_SUCCESS,\n//         payload: res,\n//       });\n//     })\n//     .catch((err) =>\n//       dispatch({\n//         type: GET_ERRORS,\n//         payload: err.response.data,\n//       })\n//     );\n// };\n\n// export const resetUser = (userData, history) => (dispatch) => {\n//   axios\n//     .post(\"/api/v1/users/reset\", userData)\n//     .then((res) => {\n//       dispatch({\n//         type: GET_SUCCESS,\n//         payload: res,\n//       });\n//     })\n//     .catch((err) =>\n//       dispatch({\n//         type: GET_ERRORS,\n//         payload: err.response.data,\n//       })\n//     );\n// };\n\nexport const setCurrentUser = (decoded) => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded,\n  };\n};\n\nexport const setUserLoading = () => {\n  return {\n    type: USER_LOADING,\n  };\n};\n\n// export const logoutUser = (logoutData) => (dispatch) => {\n//   localStorage.removeItem(\"jwtToken\");\n//   setAuthToken(false);\n//   dispatch(setCurrentUser({}));\n//   let config = {\n//     method:'DELETE',\n//     url:'http://3.22.108.178:3335/api/v1/users/logout',\n//     data: logoutData,\n//     headers:{\n//         Authorization: \"Bearer \" + logoutData.token, Accept : 'application/json', 'Content-Type': 'application/json'\n//     }\n// }\n// axios(config).then(\n//   success=>{\n//       console.log(\"SUCCESSfully logout\")\n//       dispatch({\n//                   type: GET_SUCCESS,\n//                   payload: success,\n//       })\n//   },\n//   error=>{\n//       console.log(\"ERROR\")\n//       dispatch({\n//                   type: GET_ERRORS,\n//                   payload: error.response.data\n//               })\n//           }\n//   );\n// };\n"]},"metadata":{},"sourceType":"module"}