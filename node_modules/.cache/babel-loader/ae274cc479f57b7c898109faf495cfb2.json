{"ast":null,"code":"var _jsxFileName = \"/home/android03/Projects/pms-frontend/src/views/components/UserList/User.js\";\nimport React, { Component } from \"react\";\nimport SVG from \"react-inlinesvg\";\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport './User.css';\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport store from \"../../../store\";\nimport jwt_decode from \"jwt-decode\";\nimport { logoutUser } from \"../../../actions/authActions\";\nimport { listUsers } from \"../../../actions/usersActions\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar usersData = [];\nvar skillData = [];\n\nfunction StatusColumnFormatter() {\n  //const CustomerStatusCssClasses = [\"danger\", \"success\", \"warning\", \"info\"];\n  //const CustomerStatusTitles = [\"Suspended\", \"Active\", \"Pending\", \"Inactive\"];\n  const getLabelCssClasses = () => {\n    return `status-label status-light-${'info'}`;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    className: getLabelCssClasses(),\n    children: \"Inactive\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n\n_c = StatusColumnFormatter;\n\nfunction ActionsColumnFormatter() {\n  const toAbsoluteUrl = pathname => process.env.PUBLIC_URL + pathname;\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"a\", {\n      title: \"Edit\",\n      className: \"btn btn-icon btn-light btn-hover-primary btn-sm\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"svg-icon svg-icon-md svg-icon-primary\",\n        children: /*#__PURE__*/_jsxDEV(SVG, {\n          src: toAbsoluteUrl(\"/assets/svg/icons/Communication/Write.svg\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      title: \"Delete\",\n      className: \"btn btn-icon btn-light btn-hover-danger btn-sm\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"svg-icon svg-icon-md svg-icon-danger\",\n        children: /*#__PURE__*/_jsxDEV(SVG, {\n          src: toAbsoluteUrl(\"/assets/svg/icons/General/Trash.svg\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n} // function SelectionCheckbox({ isSelected, onChange }) {\n//     return (\n//         <>\n//             <input type=\"checkbox\" style={{ display: \"none\" }} />\n//             <label className=\"checkbox checkbox-single\">\n//                 <input type=\"checkbox\" checked={isSelected} onChange={onChange} />\n//                 <span />\n//             </label>\n//         </>\n//     );\n// }\n\n\n_c2 = ActionsColumnFormatter;\n\nclass UserList extends Component {\n  constructor() {\n    super();\n\n    this.skillCond = (item, index = 0) => {\n      console.log('arpit', item, index + 1);\n\n      if (item.skill != undefined) {\n        return item.skill.map(val => {\n          return /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [val.technology.name, \" - \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: val.proficiency\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 48\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 21\n          }, this);\n        });\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 20\n        }, this);\n      }\n    };\n\n    this.state = {\n      token: \"\",\n      projectItem: \"\",\n      filter: \"\"\n    };\n  }\n\n  componentDidMount() {\n    if (localStorage.jwtToken) {\n      const token = localStorage.jwtToken;\n      const decoded = jwt_decode(token);\n      this.setState({\n        token: decoded.token\n      });\n      const userData = {\n        user_type: 1,\n        token: decoded.token\n      };\n      this.listUser(userData);\n    } else {\n      store.dispatch(logoutUser());\n      this.props.history.push(\"/login\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    console.log('next prop', nextProps);\n    skillData = [];\n\n    if (nextProps.apiRes) {\n      if (nextProps.apiRes.status === 200) {\n        if (nextProps.apiRes.data.message == null) {\n          usersData = [];\n          var data = nextProps.apiRes.data; //console.log(data)\n\n          for (var i = 0; i < data.length; i++) {\n            data[i].skills.map(item => {\n              //console.log('data skill',item)\n              var skillArr = {\n                proficiency: item.proficiency,\n                skillname: item.technology.name\n              };\n              skillData.push(skillArr);\n            });\n            var j = i + 1;\n            var dataArr = {\n              s_no: j,\n              name: data[i].name,\n              user_id: data[i].id,\n              emp_id: data[i].employee_code,\n              email: data[i].email,\n              skill: data[i].skills,\n              user_type: data[i].user_type //action:'efvgbthrnb'\n\n            };\n            usersData.push(dataArr);\n          }\n\n          console.log('user data is', usersData); //console.log('skill',skillData)\n        } else {\n          toast.success(nextProps.apiRes.data.message, {\n            position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined\n          }); //   const userData = {\n          //     user_type: 1,\n          //     token: this.state.token\n          //   };\n          //   this.listUser(userData);\n        }\n      } else {\n        toast.error(nextProps.apiRes.errorMessage, {\n          position: \"top-right\",\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined\n        });\n      }\n    }\n  }\n\n  listUser(userData) {\n    this.props.listUsers(userData);\n  }\n\n  render() {\n    const columns = [{\n      dataField: \"s_no\",\n      text: \"S.No\",\n      headerClasses: \"data-sno\",\n      sort: true\n    }, {\n      dataField: \"emp_id\",\n      text: \"Emp ID\",\n      sort: true\n    }, {\n      dataField: \"name\",\n      text: \"Name\",\n      sort: true\n    }, {\n      dataField: \"email\",\n      text: \"Email\",\n      classes: \"text-truncate\",\n      sort: false\n    }, {\n      dataField: \"skill\",\n      text: \"Skill\",\n      sort: false,\n      formatter: () => this.skillCond(usersData)\n    }, {\n      dataField: \"user_type\",\n      text: \"User Type\",\n      headerClasses: \"data-userType\",\n      sort: true\n    }, // { dataField: \"userType\", text: \"User Type\", classes: \"list-status-td\", sort: true, formatter: StatusColumnFormatter },\n    {\n      dataField: \"action\",\n      text: \"Actions\",\n      classes: \"text-right table-card-action\",\n      formatter: ActionsColumnFormatter,\n      headerClasses: \"text-right\",\n      style: {\n        minWidth: \"100px\"\n      }\n    }]; // const products = [\n    //     { s_no: 1, emp_id: 'Arka123', name: 'super', email: 'abc@gmail.com', skill: 'react', userType:'admin', action: { ActionsColumnFormatter } },\n    //     { s_no: 1, emp_id: 'Arka123', name: 'super', email: 'abc@gmail.com', skill: 'react', userType:'admin', action: { ActionsColumnFormatter } },\n    // ];\n\n    const defaultSorted = [{\n      dataField: 'id',\n      order: 'asc'\n    }];\n\n    const customTotal = (from, to, size) => /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"react-bootstrap-table-pagination-total\",\n      children: [\"Showing rows \", from, \" to \", to, \" of \", size]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 13\n    }, this); // Table pagination properties\n\n\n    const paginationOptions = {\n      paginationSize: 10,\n      pageStartIndex: 0,\n      //custom: true,\n      firstPageText: 'First',\n      prePageText: 'Back',\n      nextPageText: 'Next',\n      lastPageText: 'Last',\n      nextPageTitle: 'First page',\n      prePageTitle: 'Pre page',\n      firstPageTitle: 'Next page',\n      lastPageTitle: 'Last page',\n      showTotal: true,\n      paginationTotalRenderer: customTotal,\n      sizePerPageList: [{\n        text: '10',\n        value: 10\n      }, {\n        text: '20',\n        value: 20\n      }, {\n        text: 'All',\n        value: usersData.length\n      }]\n    };\n    const selectRow = {\n      mode: 'checkbox',\n      clickToSelect: true,\n      clickToEdit: true,\n      hideSelectAll: false // selectionHeaderRenderer: () => {\n      //     return (\n      //         <SelectionCheckbox />\n      //     );\n      // },\n\n    };\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex flex-row flex-column-fluid page\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex flex-column flex-row-fluid wrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"container\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"table-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"table-card-header\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  class: \"table-card-title\",\n                  children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                    class: \"card-label\",\n                    children: \"Users list\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 256,\n                    columnNumber: 94\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 256,\n                  columnNumber: 64\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  class: \"table-card-toolbar\",\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    class: \"btn btn-primary\",\n                    children: \"Add User\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 258,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 257,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"table-card-body\",\n                children: /*#__PURE__*/_jsxDEV(BootstrapTable // selectRow={selectRow}\n                , {\n                  bordered: false,\n                  classes: \"table table-head-custom table-vertical-center overflow-hidden\",\n                  bootstrap4: true,\n                  keyField: \"id\",\n                  data: usersData,\n                  columns: columns,\n                  defaultSorted: defaultSorted,\n                  pagination: paginationFactory(paginationOptions),\n                  scopedSlots: {\n                    'skill': (item, index) => {\n                      //console.log('item is',item.skill);\n                      return /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: this.skillCond(item)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 278,\n                        columnNumber: 57\n                      }, this);\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 263,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nUserList.propTypes = {\n  listUsers: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  apiRes: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  apiRes: state.apiRes\n});\n\nexport default connect(mapStateToProps, {\n  listUsers\n})(UserList);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"StatusColumnFormatter\");\n$RefreshReg$(_c2, \"ActionsColumnFormatter\");","map":{"version":3,"sources":["/home/android03/Projects/pms-frontend/src/views/components/UserList/User.js"],"names":["React","Component","SVG","BootstrapTable","paginationFactory","PropTypes","connect","store","jwt_decode","logoutUser","listUsers","ToastContainer","toast","usersData","skillData","StatusColumnFormatter","getLabelCssClasses","ActionsColumnFormatter","toAbsoluteUrl","pathname","process","env","PUBLIC_URL","UserList","constructor","skillCond","item","index","console","log","skill","undefined","map","val","technology","name","proficiency","state","token","projectItem","filter","componentDidMount","localStorage","jwtToken","decoded","setState","userData","user_type","listUser","dispatch","props","history","push","componentWillReceiveProps","nextProps","apiRes","status","data","message","i","length","skills","skillArr","skillname","j","dataArr","s_no","user_id","id","emp_id","employee_code","email","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","error","errorMessage","render","columns","dataField","text","headerClasses","sort","classes","formatter","style","minWidth","defaultSorted","order","customTotal","from","to","size","paginationOptions","paginationSize","pageStartIndex","firstPageText","prePageText","nextPageText","lastPageText","nextPageTitle","prePageTitle","firstPageTitle","lastPageTitle","showTotal","paginationTotalRenderer","sizePerPageList","value","selectRow","mode","clickToSelect","clickToEdit","hideSelectAll","propTypes","func","isRequired","auth","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport SVG from \"react-inlinesvg\";\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport './User.css';\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport store from \"../../../store\";\nimport jwt_decode from \"jwt-decode\";\nimport { logoutUser } from \"../../../actions/authActions\";\nimport { listUsers } from \"../../../actions/usersActions\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nvar usersData = [];\nvar skillData = [];\n\nfunction StatusColumnFormatter() {\n    //const CustomerStatusCssClasses = [\"danger\", \"success\", \"warning\", \"info\"];\n    //const CustomerStatusTitles = [\"Suspended\", \"Active\", \"Pending\", \"Inactive\"];\n    const getLabelCssClasses = () => {\n        return `status-label status-light-${'info'}`;\n    };\n    return (\n        <span className={getLabelCssClasses()}>\n            Inactive\n        </span>\n    );\n}\nfunction ActionsColumnFormatter() {\n    const toAbsoluteUrl = pathname => process.env.PUBLIC_URL + pathname;\n    return (\n        <>\n            <a title=\"Edit\" className=\"btn btn-icon btn-light btn-hover-primary btn-sm\">\n                <span className=\"svg-icon svg-icon-md svg-icon-primary\">\n                    <SVG\n                        src={toAbsoluteUrl(\"/assets/svg/icons/Communication/Write.svg\")}\n                    />\n                </span>\n            </a>\n            <a title=\"Delete\" className=\"btn btn-icon btn-light btn-hover-danger btn-sm\" >\n                <span className=\"svg-icon svg-icon-md svg-icon-danger\">\n                    <SVG src={toAbsoluteUrl(\"/assets/svg/icons/General/Trash.svg\")} />\n                </span>\n            </a>\n        </>\n    );\n}\n\n// function SelectionCheckbox({ isSelected, onChange }) {\n//     return (\n//         <>\n//             <input type=\"checkbox\" style={{ display: \"none\" }} />\n//             <label className=\"checkbox checkbox-single\">\n//                 <input type=\"checkbox\" checked={isSelected} onChange={onChange} />\n//                 <span />\n//             </label>\n//         </>\n//     );\n// }\n\nclass UserList extends Component {\n    constructor() {\n        super();\n        this.state = {\n            token: \"\",\n            projectItem: \"\",\n            filter: \"\",  \n        };\n    }\n\n    componentDidMount(){\n        if(localStorage.jwtToken)\n        { \n          const token = localStorage.jwtToken;\n          const decoded = jwt_decode(token);\n    \n          this.setState({ token: decoded.token });\n    \n          const userData = {\n            user_type: 1,\n            token: decoded.token\n          };\n    \n          this.listUser(userData);\n        }else{\n          store.dispatch(logoutUser());\n          this.props.history.push(\"/login\");\n        }\n      };\n\n      componentWillReceiveProps(nextProps) {\n          console.log('next prop',nextProps)\n        skillData = [];\n        if (nextProps.apiRes) {\n          if(nextProps.apiRes.status === 200)\n          {\n            if(nextProps.apiRes.data.message == null)\n            {\n              usersData = [];\n             \n              var data = nextProps.apiRes.data;\n              //console.log(data)\n              for (var i = 0; i < data.length; i++) {\n                data[i].skills.map((item)=>{\n                  //console.log('data skill',item)\n                 \n                    var skillArr = {\n                      proficiency: item.proficiency,\n                      skillname: item.technology.name\n                    }\n                    skillData.push(skillArr)   \n                })\n                var j = i+1;\n                var dataArr = {\n                  s_no : j,\n                  name : data[i].name,\n                  user_id : data[i].id,\n                  emp_id : data[i].employee_code,\n                  email : data[i].email,\n                  skill : data[i].skills,\n                  user_type: data[i].user_type,  \n                  //action:'efvgbthrnb'\n                }\n                \n                usersData.push(dataArr);\n              \n              }\n             console.log('user data is',usersData)\n             //console.log('skill',skillData)\n              \n            }else{\n              toast.success(nextProps.apiRes.data.message, {\n                position: \"top-right\",\n                autoClose: 5000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined,\n              });\n    \n            //   const userData = {\n            //     user_type: 1,\n            //     token: this.state.token\n            //   };\n    \n            //   this.listUser(userData);\n            }\n          }else{\n            toast.error(nextProps.apiRes.errorMessage, {\n              position: \"top-right\",\n              autoClose: 5000,\n              hideProgressBar: false,\n              closeOnClick: true,\n              pauseOnHover: true,\n              draggable: true,\n              progress: undefined,\n            });\n          }\n        }\n      }\n\n      listUser(userData)\n      {\n        this.props.listUsers(userData);\n      }\n\n\n     skillCond = (item, index=0) =>{\n        console.log('arpit',item, index+1)\n        if(item.skill != undefined){ \n          return item.skill.map((val)=>{\n     \n             return <p>{val.technology.name} - <span>{val.proficiency}</span></p>;\n           })\n         }\n          else{\n            return <p>No Data</p>\n          } \n        }\n\n\n    render() {\n        const columns = [\n            { dataField: \"s_no\", text: \"S.No\", headerClasses: \"data-sno\", sort: true },\n            { dataField: \"emp_id\", text: \"Emp ID\", sort: true },\n            { dataField: \"name\", text: \"Name\", sort: true },\n            { dataField: \"email\", text: \"Email\", classes:\"text-truncate\", sort: false },\n            { dataField: \"skill\", text: \"Skill\", sort: false, formatter: () => this.skillCond(usersData) },\n            { dataField: \"user_type\", text: \"User Type\", headerClasses: \"data-userType\", sort: true },\n            // { dataField: \"userType\", text: \"User Type\", classes: \"list-status-td\", sort: true, formatter: StatusColumnFormatter },\n            { dataField: \"action\", text: \"Actions\", classes: \"text-right table-card-action\", formatter: ActionsColumnFormatter, headerClasses: \"text-right\", style: { minWidth: \"100px\", } },\n        ];\n\n        // const products = [\n        //     { s_no: 1, emp_id: 'Arka123', name: 'super', email: 'abc@gmail.com', skill: 'react', userType:'admin', action: { ActionsColumnFormatter } },\n        //     { s_no: 1, emp_id: 'Arka123', name: 'super', email: 'abc@gmail.com', skill: 'react', userType:'admin', action: { ActionsColumnFormatter } },\n        // ];\n\n        const defaultSorted = [{\n            dataField: 'id',\n            order: 'asc'\n        }];\n\n        const customTotal = (from, to, size) => (\n            <span className=\"react-bootstrap-table-pagination-total\">\n                Showing rows { from} to { to} of { size}\n            </span>\n        );\n\n        // Table pagination properties\n        const paginationOptions = {\n            paginationSize: 10,\n            pageStartIndex: 0,\n            //custom: true,\n            firstPageText: 'First',\n            prePageText: 'Back',\n            nextPageText: 'Next',\n            lastPageText: 'Last',\n            nextPageTitle: 'First page',\n            prePageTitle: 'Pre page',\n            firstPageTitle: 'Next page',\n            lastPageTitle: 'Last page',\n            showTotal: true,\n            paginationTotalRenderer: customTotal,\n            sizePerPageList: [{\n                text: '10', value: 10\n            }, {\n                text: '20', value: 20\n            }, {\n                text: 'All', value: usersData.length\n            }],\n        };\n\n        const selectRow = {\n            mode: 'checkbox',\n            clickToSelect: true,\n            clickToEdit: true,\n            hideSelectAll: false,\n\n            // selectionHeaderRenderer: () => {\n            //     return (\n            //         <SelectionCheckbox />\n            //     );\n            // },\n        };\n\n        return (\n            <>\n                <div className=\"d-flex flex-row flex-column-fluid page\">\n                    <div className=\"d-flex flex-column flex-row-fluid wrapper\">\n                        <div class=\"container\">\n                            <div className=\"table-card\">\n                                <div class=\"table-card-header\"><div class=\"table-card-title\"><h3 class=\"card-label\">Users list</h3></div>\n                                    <div class=\"table-card-toolbar\">\n                                        <button type=\"button\" class=\"btn btn-primary\">Add User</button>\n                                    </div>\n                                </div>\n                                <div className=\"table-card-body\">\n                                    {/* {console.log( products)} */}\n                                    <BootstrapTable\n                                        // selectRow={selectRow}\n                                        bordered={false}\n                                        classes=\"table table-head-custom table-vertical-center overflow-hidden\"\n                                        bootstrap4\n                                        keyField='id'\n                                        data={usersData}\n                                        columns={columns}\n                                        defaultSorted={defaultSorted}\n                                        pagination={paginationFactory(paginationOptions)}\n                                        scopedSlots = {{\n                                               'skill':\n                                                (item, index)=>{\n                                                 //console.log('item is',item.skill);\n                                                return (\n                                                        <div>\n                                                           {this.skillCond(item)} \n                                                        </div>\n                                                  ) \n                                               } \n                          \n                                          }}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </>\n\n        );\n    }\n}\n\n\nUserList.propTypes = {\n    listUsers: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    apiRes: PropTypes.object.isRequired\n  };\n  \n  const mapStateToProps = state => ({\n    auth: state.auth,\n    apiRes: state.apiRes\n  });\n  \n  export default connect(\n    mapStateToProps,\n    { listUsers }\n  )(UserList);"]},"metadata":{},"sourceType":"module"}