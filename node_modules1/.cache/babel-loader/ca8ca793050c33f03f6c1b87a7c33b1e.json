{"ast":null,"code":"var _jsxFileName = \"/home/android03/Projects/pms-frontend/src/views/components/Login/Login.js\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { loginUser } from \"../../../actions/authActions\";\nimport './Login.css';\nimport PropTypes from \"prop-types\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Login extends Component {\n  constructor() {\n    super();\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      }); //console.log('target value is',e.target.value)\n    };\n\n    this.onSubmit = e => {\n      this.setState({\n        submitStatus: true\n      });\n      e.preventDefault();\n      const userData = {\n        email: this.state.email,\n        password: this.state.password\n      };\n      this.props.loginUser(userData);\n      console.log('submit value is', userData);\n    };\n\n    this.state = {\n      email: \"\",\n      password: \"\",\n      submitStatus: false\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.auth.isAuthenticated) {//          this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    console.log('next props', nextProps);\n\n    if (nextProps.auth.isAuthenticated) {\n      this.props.history.push(\"/dashboard\");\n    }\n\n    if (nextProps.apiRes) {\n      if (nextProps.apiRes.status === 200) {//\n      } else {\n        toast.error(nextProps.apiRes.errorMessage, {\n          position: \"top-right\",\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined\n        });\n        this.setState({\n          submitStatus: false\n        });\n      }\n    }\n  }\n\n  render() {\n    const toAbsoluteUrl = pathname => process.env.PUBLIC_URL + pathname;\n\n    const {\n      email,\n      password,\n      submitStatus\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-wrapper\",\n      style: {\n        backgroundImage: `url(${toAbsoluteUrl(\"./assets/media/bg/bg-3.jpg\")})`\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"login-form-block\",\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            className: \"login-brand\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              alt: \"Logo\",\n              src: \"./assets/logo/logo.png\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"auth-form\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"auth-head\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \" Sign In Admin \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \" Enter your details to login to your account:  \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"auth-body\",\n              children: /*#__PURE__*/_jsxDEV(\"form\", {\n                class: \"form\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  class: \"form-group\",\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    class: \"form-control\",\n                    type: \"text\",\n                    placeholder: \"Email\",\n                    name: \"email\",\n                    onChange: this.onChange,\n                    value: email\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 91,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  class: \"form-group\",\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    class: \"form-control\",\n                    type: \"password\",\n                    placeholder: \"Password\",\n                    name: \"password\",\n                    onChange: this.onChange,\n                    value: password\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 94,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  class: \"form-group authTwo-link-block\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    class: \"checkbox-inline\",\n                    children: /*#__PURE__*/_jsxDEV(\"label\", {\n                      class: \"checkbox\",\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"checkbox\",\n                        className: \"d-none\",\n                        name: \"remember\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 101,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 102,\n                        columnNumber: 53\n                      }, this), \"Remember me\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 100,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 99,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Link, {\n                    to: \"/auth/forgot-password\",\n                    className: \"forgotPass-link\",\n                    id: \"kt_login_forgot\",\n                    children: \"Forget Password ?\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 106,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group mb-0 auth-submit-block text-center\",\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"submit\",\n                    className: \"btn btn-primary\",\n                    onClick: this.onSubmit,\n                    disabled: submitStatus,\n                    children: \" Sign In\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 114,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n\nLogin.propTypes = {\n  loginUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  apiRes: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  apiRes: state.apiRes\n});\n\nexport default connect(mapStateToProps, {\n  loginUser\n})(Login);","map":{"version":3,"sources":["/home/android03/Projects/pms-frontend/src/views/components/Login/Login.js"],"names":["React","Component","Link","connect","loginUser","PropTypes","ToastContainer","toast","Login","constructor","onChange","e","setState","target","name","value","onSubmit","submitStatus","preventDefault","userData","email","state","password","props","console","log","componentDidMount","auth","isAuthenticated","componentWillReceiveProps","nextProps","history","push","apiRes","status","error","errorMessage","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","render","toAbsoluteUrl","pathname","process","env","PUBLIC_URL","backgroundImage","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { loginUser } from \"../../../actions/authActions\";\nimport './Login.css';\nimport PropTypes from \"prop-types\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\n\nclass Login extends Component {\n    constructor() {\n        super();\n        this.state = {\n            email: \"\",\n            password: \"\",\n            submitStatus: false,\n          };\n    }\n\n    componentDidMount() {\n         if (this.props.auth.isAuthenticated) {\n//          this.props.history.push(\"/dashboard\");\n         }\n      }\n    \n      componentWillReceiveProps(nextProps) {\n        console.log('next props', nextProps)\n        if (nextProps.auth.isAuthenticated) {\n          this.props.history.push(\"/dashboard\");\n         }\n    \n        if (nextProps.apiRes) {\n          if (nextProps.apiRes.status === 200) {\n            //\n          } else {\n            toast.error(nextProps.apiRes.errorMessage, {\n              position: \"top-right\",\n              autoClose: 5000,\n              hideProgressBar: false,\n              closeOnClick: true,\n              pauseOnHover: true,\n              draggable: true,\n              progress: undefined,\n            });\n    \n            this.setState({ submitStatus: false });\n          }\n        }\n      }\n    \n      onChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n        //console.log('target value is',e.target.value)\n      };\n    \n      onSubmit = (e) => {\n        this.setState({ submitStatus: true });\n    \n        e.preventDefault();\n        const userData = {\n          email: this.state.email,\n          password: this.state.password,\n        };\n        this.props.loginUser(userData);\n        console.log('submit value is',userData)\n      };\n\n\n    render() {\n        const toAbsoluteUrl = pathname => process.env.PUBLIC_URL + pathname;\n        const { email, password, submitStatus } = this.state;\n\n        return (\n                <div className=\"auth-wrapper\" style={{ backgroundImage: `url(${toAbsoluteUrl(\"./assets/media/bg/bg-3.jpg\")})`, }}>\n                    <div class=\"container\">\n                        <div class=\"login-form-block\">\n                            <Link to=\"/\" className=\"login-brand\">\n                                <img alt=\"Logo\" src=\"./assets/logo/logo.png\" />\n                            </Link>\n\n                            <div className=\"auth-form\">\n                                <div className=\"auth-head\">\n                                    <h3> Sign In Admin </h3>\n                                    <p> Enter your details to login to your account:  </p>\n                                </div>\n\n                                <div className=\"auth-body\">\n                                    <form class=\"form\">\n                                        <div class=\"form-group\">\n                                            <input class=\"form-control\" type=\"text\" placeholder=\"Email\" name=\"email\" onChange={this.onChange} value={email}/>\n                                        </div>\n                                        <div class=\"form-group\">\n                                            <input class=\"form-control\" type=\"password\" placeholder=\"Password\" name=\"password\" onChange={this.onChange} value={password}/>\n                                        </div>\n\n\n                                        <div class=\"form-group authTwo-link-block\">\n                                            <div class=\"checkbox-inline\">\n                                                <label class=\"checkbox\">\n                                                    <input type=\"checkbox\" className=\"d-none\" name=\"remember\" />\n                                                    <span></span>\n                                                        Remember me\n                                                </label>\n                                            </div>\n                                            <Link\n                                                to=\"/auth/forgot-password\"\n                                                className=\"forgotPass-link\"\n                                                id=\"kt_login_forgot\">\n                                                Forget Password ?\n                                            </Link>\n                                        </div>\n                                        <div className=\"form-group mb-0 auth-submit-block text-center\">\n                                            <button\n                                                type=\"submit\"\n                                                className=\"btn btn-primary\" onClick={this.onSubmit} disabled={submitStatus}\n                                            > Sign In\n                                            </button>\n                                        </div>\n                                    </form>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <ToastContainer />\n                </div>\n\n        );\n    }\n}\n\n\nLogin.propTypes = {\n    loginUser: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    apiRes: PropTypes.object.isRequired,\n  };\n  \n  const mapStateToProps = (state) => ({\n    auth: state.auth,\n    apiRes: state.apiRes,\n  });\n  \n  export default connect(mapStateToProps, { loginUser })(Login);"]},"metadata":{},"sourceType":"module"}