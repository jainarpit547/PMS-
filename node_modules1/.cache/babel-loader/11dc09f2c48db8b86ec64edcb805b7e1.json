{"ast":null,"code":"var _jsxFileName = \"/home/android03/Projects/pms-frontend/src/views/components/User/UserList/User.js\";\nimport React, { Component } from \"react\";\nimport SVG from \"react-inlinesvg\";\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport './User.css';\nimport '../../../../Table.css';\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport store from \"../../../../store\";\nimport jwt_decode from \"jwt-decode\";\nimport { logoutUser } from \"../../../../actions/authActions\";\nimport { listUsers } from \"../../../../actions/usersActions\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar usersData = [];\nvar skillData = []; // function StatusColumnFormatter() {\n//     //const CustomerStatusCssClasses = [\"danger\", \"success\", \"warning\", \"info\"];\n//     //const CustomerStatusTitles = [\"Suspended\", \"Active\", \"Pending\", \"Inactive\"];\n//     const getLabelCssClasses = () => {\n//         return `status-label status-light-${'info'}`;\n//     };\n//     return (\n//         <span className={getLabelCssClasses()}>\n//             Inactive\n//         </span>\n//     );\n// }\n// function SelectionCheckbox({ isSelected, onChange }) {\n//     return (\n//         <>\n//             <input type=\"checkbox\" style={{ display: \"none\" }} />\n//             <label className=\"checkbox checkbox-single\">\n//                 <input type=\"checkbox\" checked={isSelected} onChange={onChange} />\n//                 <span />\n//             </label>\n//         </>\n//     );\n// }\n\nclass UserList extends Component {\n  constructor() {\n    super();\n\n    this.skillCond = item => {\n      //console.log('item is',item)\n      if (item.length > 0) {\n        return item.map(val => {\n          return /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [val.technology.name, \" - \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: val.proficiency\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 48\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 21\n          }, this);\n        });\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"-\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 20\n        }, this);\n      }\n    };\n\n    this.ActionsColumnFormatter = item => {\n      console.log('obj is ', item);\n\n      const toAbsoluteUrl = pathname => process.env.PUBLIC_URL + pathname;\n\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/user-detail/\" + item.id,\n          title: \"View\",\n          className: \"btn btn-icon symbol-success btn-sm\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"svg-icon svg-icon-md svg-icon-primary\",\n            children: /*#__PURE__*/_jsxDEV(SVG, {\n              width: \"20px\",\n              height: \"20px\",\n              src: toAbsoluteUrl(\"/assets/svg/icons/Human/eye.svg\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/add-user\",\n          title: \"Edit\",\n          className: \"btn btn-icon symbol-warning btn-sm\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"svg-icon svg-icon-md svg-icon-primary\",\n            children: /*#__PURE__*/_jsxDEV(SVG, {\n              width: \"20px\",\n              height: \"20px\",\n              src: toAbsoluteUrl(\"/assets/svg/icons/General/Edit.svg\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"\",\n          title: \"Delete\",\n          className: \"btn btn-icon symbol-danger btn-hover-danger btn-sm\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"svg-icon svg-icon-md svg-icon-danger\",\n            children: /*#__PURE__*/_jsxDEV(SVG, {\n              width: \"20px\",\n              height: \"20px\",\n              src: toAbsoluteUrl(\"/assets/svg/icons/General/Trash.svg\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true);\n    };\n\n    this.state = {\n      token: \"\",\n      projectItem: \"\",\n      filter: \"\"\n    };\n  }\n\n  componentDidMount() {\n    if (localStorage.jwtToken) {\n      const token = localStorage.jwtToken;\n      const decoded = jwt_decode(token);\n      this.setState({\n        token: decoded.token\n      });\n      const userData = {\n        user_type: 1,\n        token: decoded.token\n      };\n      this.listUser(userData);\n    } else {\n      store.dispatch(logoutUser());\n      this.props.history.push(\"/login\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    console.log('next prop', nextProps);\n    skillData = [];\n\n    if (nextProps.apiRes) {\n      if (nextProps.apiRes.status === 200) {\n        if (nextProps.apiRes.data.message == null) {\n          usersData = [];\n          var data = nextProps.apiRes.data; //console.log(data)\n\n          for (var i = 0; i < data.length; i++) {\n            data[i].skills.map(item => {\n              //console.log('data skill',item)\n              var skillArr = {\n                proficiency: item.proficiency,\n                skillname: item.technology.name\n              };\n              skillData.push(skillArr);\n            });\n            var j = i + 1;\n            var dataArr = {\n              s_no: j,\n              name: data[i].name,\n              user_id: data[i].id,\n              emp_id: data[i].employee_code === null ? '-' : data[i].employee_code,\n              email: data[i].email,\n              skill: this.skillCond(data[i].skills),\n              user_type: data[i].user_type,\n              action: this.ActionsColumnFormatter(data[i])\n            };\n            usersData.push(dataArr);\n          }\n\n          console.log('user data is', usersData); //console.log('skill',skillData)\n        } else {\n          toast.success(nextProps.apiRes.data.message, {\n            position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined\n          });\n        }\n      } else {\n        toast.error(nextProps.apiRes.errorMessage, {\n          position: \"top-right\",\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined\n        });\n      }\n    }\n  }\n\n  listUser(userData) {\n    this.props.listUsers(userData);\n  }\n\n  render() {\n    const columns = [{\n      dataField: \"s_no\",\n      text: \"S.No\",\n      headerClasses: \"data-sno\",\n      sort: true\n    }, {\n      dataField: \"emp_id\",\n      text: \"Emp ID\",\n      sort: true\n    }, {\n      dataField: \"name\",\n      text: \"Name\",\n      sort: true\n    }, {\n      dataField: \"email\",\n      text: \"Email\",\n      classes: \"text-truncate\",\n      sort: false\n    }, {\n      dataField: \"skill\",\n      text: \"Skill\",\n      sort: false\n    }, {\n      dataField: \"user_type\",\n      text: \"User Type\",\n      headerClasses: \"data-userType\",\n      sort: true\n    }, // { dataField: \"userType\", text: \"User Type\", classes: \"list-status-td\", sort: true, formatter: StatusColumnFormatter },\n    {\n      dataField: \"action\",\n      text: \"Actions\",\n      classes: \"text-right table-card-action\",\n      headerClasses: \"text-right\",\n      style: {\n        minWidth: \"100px\"\n      }\n    }];\n    const defaultSorted = [{\n      dataField: 'id',\n      order: 'asc'\n    }];\n\n    const customTotal = (from, to, size) => /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"react-bootstrap-table-pagination-total\",\n      children: [\"Showing rows \", from, \" to \", to, \" of \", size]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 13\n    }, this); // Table pagination properties\n\n\n    const paginationOptions = {\n      paginationSize: 10,\n      pageStartIndex: 0,\n      //custom: true,\n      firstPageText: 'First',\n      prePageText: 'Back',\n      nextPageText: 'Next',\n      lastPageText: 'Last',\n      nextPageTitle: 'First page',\n      prePageTitle: 'Pre page',\n      firstPageTitle: 'Next page',\n      lastPageTitle: 'Last page',\n      showTotal: true,\n      paginationTotalRenderer: customTotal,\n      sizePerPageList: [{\n        text: '10',\n        value: 10\n      }, {\n        text: '20',\n        value: 20\n      }, {\n        text: 'All',\n        value: usersData.length\n      }]\n    }; // const selectRow = {\n    //     mode: 'checkbox',\n    //     clickToSelect: true,\n    //     clickToEdit: true,\n    //     hideSelectAll: false,\n    //     // selectionHeaderRenderer: () => {\n    //     //     return (\n    //     //         <SelectionCheckbox />\n    //     //     );\n    //     // },\n    // };\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex flex-column flex-row-fluid wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"table-card\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"table-card-body\",\n              children: /*#__PURE__*/_jsxDEV(BootstrapTable // selectRow={selectRow}\t\n              , {\n                bordered: false,\n                classes: \"table table-head-custom table-vertical-center overflow-hidden\",\n                bootstrap4: true,\n                keyField: \"id\",\n                data: usersData,\n                columns: columns,\n                defaultSorted: defaultSorted,\n                pagination: paginationFactory(paginationOptions) // scopedSlots = {{\t\n                //         'skill':\t\n                //         (item, index)=>{\t\n                //           //console.log('item is',item.skill);\t\n                //         return (\t\n                //                 <div>\t\n                //                     {this.skillCond(item)} \t\n                //                 </div>\t\n                //           ) \t\n                //         } \t\n                //   }}\t\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nUserList.propTypes = {\n  listUsers: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  apiRes: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  apiRes: state.apiRes\n});\n\nexport default connect(mapStateToProps, {\n  listUsers\n})(UserList);","map":{"version":3,"sources":["/home/android03/Projects/pms-frontend/src/views/components/User/UserList/User.js"],"names":["React","Component","SVG","BootstrapTable","paginationFactory","PropTypes","connect","store","jwt_decode","logoutUser","listUsers","ToastContainer","toast","Link","usersData","skillData","UserList","constructor","skillCond","item","length","map","val","technology","name","proficiency","ActionsColumnFormatter","console","log","toAbsoluteUrl","pathname","process","env","PUBLIC_URL","id","state","token","projectItem","filter","componentDidMount","localStorage","jwtToken","decoded","setState","userData","user_type","listUser","dispatch","props","history","push","componentWillReceiveProps","nextProps","apiRes","status","data","message","i","skills","skillArr","skillname","j","dataArr","s_no","user_id","emp_id","employee_code","email","skill","action","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","error","errorMessage","render","columns","dataField","text","headerClasses","sort","classes","style","minWidth","defaultSorted","order","customTotal","from","to","size","paginationOptions","paginationSize","pageStartIndex","firstPageText","prePageText","nextPageText","lastPageText","nextPageTitle","prePageTitle","firstPageTitle","lastPageTitle","showTotal","paginationTotalRenderer","sizePerPageList","value","propTypes","func","isRequired","auth","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport SVG from \"react-inlinesvg\";\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport './User.css';\nimport '../../../../Table.css';\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport store from \"../../../../store\";\nimport jwt_decode from \"jwt-decode\";\nimport { logoutUser } from \"../../../../actions/authActions\";\nimport { listUsers } from \"../../../../actions/usersActions\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Link } from \"react-router-dom\";\n\nvar usersData = [];\nvar skillData = [];\n\n// function StatusColumnFormatter() {\n//     //const CustomerStatusCssClasses = [\"danger\", \"success\", \"warning\", \"info\"];\n//     //const CustomerStatusTitles = [\"Suspended\", \"Active\", \"Pending\", \"Inactive\"];\n//     const getLabelCssClasses = () => {\n//         return `status-label status-light-${'info'}`;\n//     };\n//     return (\n//         <span className={getLabelCssClasses()}>\n//             Inactive\n//         </span>\n//     );\n// }\n\n\n// function SelectionCheckbox({ isSelected, onChange }) {\n//     return (\n//         <>\n//             <input type=\"checkbox\" style={{ display: \"none\" }} />\n//             <label className=\"checkbox checkbox-single\">\n//                 <input type=\"checkbox\" checked={isSelected} onChange={onChange} />\n//                 <span />\n//             </label>\n//         </>\n//     );\n// }\n\nclass UserList extends Component {\n    constructor() {\n        super();\n        this.state = {\n            token: \"\",\n            projectItem: \"\",\n            filter: \"\",  \n        };\n    }\n\n    componentDidMount(){\n        if(localStorage.jwtToken)\n        { \n          const token = localStorage.jwtToken;\n          const decoded = jwt_decode(token);\n    \n          this.setState({ token: decoded.token });\n    \n          const userData = {\n            user_type: 1,\n            token: decoded.token\n          };\n    \n          this.listUser(userData);\n        }else{\n          store.dispatch(logoutUser());\n          this.props.history.push(\"/login\");\n        }\n      };\n\n      componentWillReceiveProps(nextProps) {\n          console.log('next prop',nextProps)\n        skillData = [];\n        if (nextProps.apiRes) {\n          if(nextProps.apiRes.status === 200)\n          {\n            if(nextProps.apiRes.data.message == null)\n            {\n              usersData = [];\n             \n              var data = nextProps.apiRes.data;\n              //console.log(data)\n              for (var i = 0; i < data.length; i++) {\n                data[i].skills.map((item)=>{\n                  //console.log('data skill',item)\n                 \n                    var skillArr = {\n                      proficiency: item.proficiency,\n                      skillname: item.technology.name\n                    }\n                    skillData.push(skillArr)   \n                })\n                var j = i+1;\n                var dataArr = {\n                  s_no : j,\n                  name : data[i].name,\n                  user_id : data[i].id,\n                  emp_id : data[i].employee_code === null ? '-' : data[i].employee_code,\n                  email : data[i].email,\n                  skill : this.skillCond(data[i].skills),\n                  user_type: data[i].user_type,  \n                  action: this.ActionsColumnFormatter(data[i])\n                }\n                \n                usersData.push(dataArr);\n              \n              }\n             console.log('user data is',usersData)\n             //console.log('skill',skillData)\n              \n            }else{\n              toast.success(nextProps.apiRes.data.message, {\n                position: \"top-right\",\n                autoClose: 5000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined,\n              });\n    \n            }\n          }else{\n            toast.error(nextProps.apiRes.errorMessage, {\n              position: \"top-right\",\n              autoClose: 5000,\n              hideProgressBar: false,\n              closeOnClick: true,\n              pauseOnHover: true,\n              draggable: true,\n              progress: undefined,\n            });\n          }\n        }\n      }\n\n      listUser(userData)\n      {\n        this.props.listUsers(userData);\n      }\n\n\n     skillCond = (item) =>{\n        //console.log('item is',item)\n        if(item.length > 0){ \n          return item.map((val)=>{\n     \n             return <p>{val.technology.name} - <span>{val.proficiency}</span></p>;\n           })\n         }\n          else{\n            return <p>-</p>\n          } \n        }\n\n        ActionsColumnFormatter = (item) => {\n          console.log('obj is ',item)\n            const toAbsoluteUrl = pathname => process.env.PUBLIC_URL + pathname;\n            return (\n                <>\n                    <Link to={\"/user-detail/\"+item.id } title=\"View\" className=\"btn btn-icon symbol-success btn-sm\">\n                        <span className=\"svg-icon svg-icon-md svg-icon-primary\">\n                            <SVG width=\"20px\" height=\"20px\" src={toAbsoluteUrl(\"/assets/svg/icons/Human/eye.svg\")} />\n                        </span>\n                    </Link>\n                    <Link to=\"/add-user\" title=\"Edit\" className=\"btn btn-icon symbol-warning btn-sm\">\n                        <span className=\"svg-icon svg-icon-md svg-icon-primary\">\n                        <SVG width=\"20px\" height=\"20px\" src={toAbsoluteUrl(\"/assets/svg/icons/General/Edit.svg\")} />\n                        </span>\n                    </Link>\n                    <Link to=\"\" title=\"Delete\" className=\"btn btn-icon symbol-danger btn-hover-danger btn-sm\" >\n                        <span className=\"svg-icon svg-icon-md svg-icon-danger\">\n                            <SVG width=\"20px\" height=\"20px\" src={toAbsoluteUrl(\"/assets/svg/icons/General/Trash.svg\")} />\n                        </span>\n                    </Link>\n                </>\n            );\n        }\n\n\n    render() {\n        const columns = [\n            { dataField: \"s_no\", text: \"S.No\", headerClasses: \"data-sno\", sort: true },\n            { dataField: \"emp_id\", text: \"Emp ID\", sort: true },\n            { dataField: \"name\", text: \"Name\", sort: true },\n            { dataField: \"email\", text: \"Email\", classes:\"text-truncate\", sort: false },\n            { dataField: \"skill\", text: \"Skill\", sort: false },\n            { dataField: \"user_type\", text: \"User Type\", headerClasses: \"data-userType\", sort: true },\n            // { dataField: \"userType\", text: \"User Type\", classes: \"list-status-td\", sort: true, formatter: StatusColumnFormatter },\n            { dataField: \"action\", text: \"Actions\", classes: \"text-right table-card-action\", headerClasses: \"text-right\", style: { minWidth: \"100px\", } },\n        ];\n\n        const defaultSorted = [{\n            dataField: 'id',\n            order: 'asc'\n        }];\n\n        const customTotal = (from, to, size) => (\n            <span className=\"react-bootstrap-table-pagination-total\">\n                Showing rows { from} to { to} of { size}\n            </span>\n        );\n\n        // Table pagination properties\n        const paginationOptions = {\n            paginationSize: 10,\n            pageStartIndex: 0,\n            //custom: true,\n            firstPageText: 'First',\n            prePageText: 'Back',\n            nextPageText: 'Next',\n            lastPageText: 'Last',\n            nextPageTitle: 'First page',\n            prePageTitle: 'Pre page',\n            firstPageTitle: 'Next page',\n            lastPageTitle: 'Last page',\n            showTotal: true,\n            paginationTotalRenderer: customTotal,\n            sizePerPageList: [{\n                text: '10', value: 10\n            }, {\n                text: '20', value: 20\n            }, {\n                text: 'All', value: usersData.length\n            }],\n        };\n\n        // const selectRow = {\n        //     mode: 'checkbox',\n        //     clickToSelect: true,\n        //     clickToEdit: true,\n        //     hideSelectAll: false,\n\n        //     // selectionHeaderRenderer: () => {\n        //     //     return (\n        //     //         <SelectionCheckbox />\n        //     //     );\n        //     // },\n        // };\n\n        return (\n            <>\n                <div className=\"d-flex flex-column flex-row-fluid wrapper\">\n                    <div class=\"container\">\n                        <div className=\"table-card\">\n                            {/* <div class=\"table-card-header\"><div class=\"table-card-title\"><h3 class=\"card-label\">Users list</h3></div>\n                                <div class=\"table-card-toolbar\">\n                                    <a href=\"/add-user\" class=\"btn btn-primary\">Add User</a>\n                                </div>\n                            </div> */}\n                            <div className=\"table-card-body\">\n                                {/* {console.log( products)} */}\n                                <BootstrapTable\t\n                                    // selectRow={selectRow}\t\n                                    bordered={false}\t\n                                    classes=\"table table-head-custom table-vertical-center overflow-hidden\"\t\n                                    bootstrap4\t\n                                    keyField='id'\t\n                                    data={usersData}\t\n                                    columns={columns}\t\n                                    defaultSorted={defaultSorted}\t\n                                    pagination={paginationFactory(paginationOptions)}\t\n                                    // scopedSlots = {{\t\n                                    //         'skill':\t\n                                    //         (item, index)=>{\t\n                                    //           //console.log('item is',item.skill);\t\n                                    //         return (\t\n                                    //                 <div>\t\n                                    //                     {this.skillCond(item)} \t\n                                    //                 </div>\t\n                                    //           ) \t\n                                    //         } \t\n                      \t\n                                    //   }}\t\n                                />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </>\n\n        );\n    }\n}\n\n\nUserList.propTypes = {\n    listUsers: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    apiRes: PropTypes.object.isRequired\n  };\n  \n  const mapStateToProps = state => ({\n    auth: state.auth,\n    apiRes: state.apiRes\n  });\n  \n  export default connect(\n    mapStateToProps,\n    { listUsers }\n  )(UserList);"]},"metadata":{},"sourceType":"module"}