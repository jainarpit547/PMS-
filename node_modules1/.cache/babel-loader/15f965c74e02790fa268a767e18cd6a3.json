{"ast":null,"code":"import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport jwt_decode from \"jwt-decode\";\nimport { logoutUser } from \"../../../actions/authActions\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Logout extends Component {\n  constructor() {\n    super();\n    this.state = {\n      token: \"\"\n    };\n  }\n\n  componentDidMount() {\n    if (localStorage.jwtToken) {\n      const token = localStorage.jwtToken;\n      const decoded = jwt_decode(token);\n      this.setState({\n        token: decoded.token\n      });\n      const logoutData = {\n        token: decoded.token\n      };\n      this.props.logoutUser(logoutData);\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (!nextProps.auth.isAuthenticated) {\n      console.log('nextprop from logout', nextProps.auth.isAuthenticated);\n      this.props.history.push(\"/\");\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  }\n\n}\n\nLogout.propTypes = {\n  logoutUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  logoutUser\n})(Logout);","map":{"version":3,"sources":["/home/android03/Projects/pms-frontend/src/views/components/Logout/Logout.js"],"names":["React","Component","PropTypes","connect","jwt_decode","logoutUser","Logout","constructor","state","token","componentDidMount","localStorage","jwtToken","decoded","setState","logoutData","props","componentWillReceiveProps","nextProps","auth","isAuthenticated","console","log","history","push","render","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAAQC,UAAR,QAAyB,8BAAzB;;;;AAEA,MAAMC,MAAN,SAAqBL,SAArB,CAA+B;AAC7BM,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE;AADI,KAAb;AAGD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,QAAGC,YAAY,CAACC,QAAhB,EACA;AACE,YAAMH,KAAK,GAAGE,YAAY,CAACC,QAA3B;AACA,YAAMC,OAAO,GAAGT,UAAU,CAACK,KAAD,CAA1B;AAEA,WAAKK,QAAL,CAAc;AAAEL,QAAAA,KAAK,EAAEI,OAAO,CAACJ;AAAjB,OAAd;AAEA,YAAMM,UAAU,GAAG;AACjBN,QAAAA,KAAK,EAAEI,OAAO,CAACJ;AADE,OAAnB;AAGA,WAAKO,KAAL,CAAWX,UAAX,CAAsBU,UAAtB;AACD;AAEF;;AAEDE,EAAAA,yBAAyB,CAACC,SAAD,EAAY;AACnC,QAAI,CAACA,SAAS,CAACC,IAAV,CAAeC,eAApB,EAAqC;AACnCC,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAmCJ,SAAS,CAACC,IAAV,CAAeC,eAAlD;AACA,WAAKJ,KAAL,CAAWO,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;AACD;AACJ;;AAECC,EAAAA,MAAM,GAAG;AACP,wBACE,qCADF;AAGD;;AAnC4B;;AAsC/BnB,MAAM,CAACoB,SAAP,GAAmB;AACjBrB,EAAAA,UAAU,EAAEH,SAAS,CAACyB,IAAV,CAAeC,UADV;AAEjBT,EAAAA,IAAI,EAAEjB,SAAS,CAAC2B,MAAV,CAAiBD;AAFN,CAAnB;;AAKA,MAAME,eAAe,GAAGtB,KAAK,KAAK;AAChCW,EAAAA,IAAI,EAAEX,KAAK,CAACW;AADoB,CAAL,CAA7B;;AAIA,eAAehB,OAAO,CACpB2B,eADoB,EAEpB;AAAEzB,EAAAA;AAAF,CAFoB,CAAP,CAGbC,MAHa,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {connect} from \"react-redux\";\nimport jwt_decode from \"jwt-decode\";\nimport {logoutUser} from \"../../../actions/authActions\";\n\nclass Logout extends Component {\n  constructor() {\n    super();\n    this.state = {\n      token: \"\",\n    };\n  }\n\n  componentDidMount() {\n    if(localStorage.jwtToken)\n    { \n      const token = localStorage.jwtToken;\n      const decoded = jwt_decode(token);\n\n      this.setState({ token: decoded.token });\n\n      const logoutData = {\n        token: decoded.token\n      };\n      this.props.logoutUser(logoutData);\n    }\n    \n  };\n\n  componentWillReceiveProps(nextProps) {\n    if (!nextProps.auth.isAuthenticated) {\n      console.log('nextprop from logout',nextProps.auth.isAuthenticated)\n      this.props.history.push(\"/\");\n    }\n}\n\n  render() {\n    return (\n      <></>\n    );\n  }\n}\n\nLogout.propTypes = {\n  logoutUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(\n  mapStateToProps,\n  { logoutUser }\n)(Logout);"]},"metadata":{},"sourceType":"module"}